apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "drozd.dawid.dexode.com.secureme"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support:design:26.+'
    testCompile 'junit:junit:4.12'
}

task encrypt(type: JavaExec) {
    classpath "build/intermediates/classes/debug/"
    main = "drozd.dawid.dexode.com.secureme.Encrypter"
    args "-encrypt", "build/intermediates/classes/debug/", "drozd/dawid/dexode/com/secureme/SecuredData.dex"
}

task finalize() {
    doFirst {
        println('Encrypting!')
        println("${projectDir}")

        exec {
            workingDir "${projectDir}/build/intermediates/classes/debug"
            commandLine "/home/gelldur/Android/Sdk/build-tools/26.0.0/dx"             \
            , "--dex"             \
            , "--output=drozd/dawid/dexode/com/secureme/SecuredData.dex"             \
            , "drozd/dawid/dexode/com/secureme/SecuredData.class"
        }
        //We don't want in our APK this .class
        project.delete "build/intermediates/classes/debug/drozd/dawid/dexode/com/secureme/SecuredData.class"

        // Encrypt our .dex file
        encrypt.execute()

        copy {
            from "build/intermediates/classes/debug/drozd/dawid/dexode/com/secureme/SecuredData.dex"
            into "src/main/assets/"
        }
    }
}

tasks.withType(JavaCompile) { compileTask -> compileTask.finalizedBy finalize }